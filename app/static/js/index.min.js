// Gets each distinct semester year as soon as the page loads up
url = '/get_department_specific_semester_years'
$.get(url, function (data) {

    for (var i = 0; i < data["years_and_seasons"]["years"].length; i++) {
        $("#my_years").append('<option>' + data["years_and_seasons"]["years"][i] + '</option>')
    }

    for (var i = 0; i < data["years_and_seasons"]["seasons"].length; i++) {
        console.log(data["years_and_seasons"]["seasons"][i])
        $("#inputGroupSelect01").append('<option value="' + data["years_and_seasons"]["seasons"][i] + '">' + data["years_and_seasons"]["seasons"][i] + '</option>')
    }
})

function getClassSubjects() {
    $("#loadingClassesModal").modal()
}

function getClassNumbers(use_form) {

    $("#loadingClassesModal").modal()

    if (use_form) {
        var semester = $("#inputGroupSelect01").val()
        var year = $("#my_years").val()
    }

    $("#semester").html(semester)
    $("#year").html(year)

    url = '/get_class_numbers'
    $.get(url, { year: year, semester: semester }, function (data) {

        setTimeout(function () { $("#loadingClassesModal").modal('hide') }, 500);

        $('#main_container').remove()
        $('body').append(data["page"])
        $("#navbar-dropdown-menu").append('<a data-toggle="modal" data-target="#overrideModal" class="dropdown-item" role="presentation" href="#">Override</a>')
        $("#navbar-dropdown-menu").append('<a class="dropdown-item" role="presentation" data-toggle="modal" data-target="#classModal" href="#">Class</a>')
        $("#navbar-dropdown-menu").append('<a onclick="generateOverrideReport()" class="dropdown-item" role="presentation" data-toggle="modal" data-target="#generated_override_report_modal" href="#">Override Report</a>')
        $("#navbar-dropdown-menu").append('<a onclick="createSemesterReport()" class="dropdown-item" role="presentation" href="#">Semester Report</a>')
        for (var i = 0; i < data["class_numbers"].length; i++) {
            $("#class_number_list").append('<option value="' + data["class_numbers"][i] + '">' + data["class_numbers"][i] + '</option>')
        }

    })
}

function createSemesterReport() {
    $("#creatingSemesterReportModal").modal()

    semester = $("#semester").text()
    year = $("#year").text()

    url = '/create_semester_report?semester=' + semester + '&year=' + year

    window.location.href = url
}

function changeFunc() {
    var class_number_list = document.getElementById("class_number_list");

    semester = $("#semester").text()
    year = parseInt($("#year").text())
    class_number = class_number_list.options[class_number_list.selectedIndex].value;

    url = '/get_class_sections'

    payload = {
        "semester": semester,
        "year": year,
        "class_number": class_number
    }

    $.get(url, payload, function (response) {
        $("#class_section_list").empty()

        for (var i = 0; i < response.length; i++) {
            $("#class_section_list").append('<option value="' + response[i] + '">' + response[i] + '</option>')
        }
    })
}

function fetchClasses(class_number) {

    semester = $("#semester").text()
    year = parseInt($("#year").text())
    url = '/fetch_classes'

    $.get(url, { semester: semester, year: year, class_number: class_number }, function (data) {
        $("#" + data["class_number"] + "-container").empty()
        $("#" + data["class_number"] + "-container").append(data["page"])
    })
}

function generateSemesterFromCatsweb() {

    $("#creatingSemesterModal").modal()

    sid = $("#netID").val()
    PIN = $("#PID").val()
    semester = $("#catsweb_new_semester_season").val()
    year = $("#catsweb_new_semester_year").val()

    payload = {
        "sid": sid,
        "PIN": PIN,
        "semester": semester,
        "year": year
    }

    url = '/generate_semester_from_catsweb'

    $.post(url, payload, function (response) {

        setTimeout(function () { $("#creatingSemesterModal").modal('hide') }, 500);

        if (response["status_code"] == 401) {
            setTimeout(function () { $('#incorrectPasswordModal').modal() }, 1000);
        } else if (response["status_code"] == 402) {
            setTimeout(function () { $('#semesterAlreadyExistsModal').modal() }, 1000);
        } else if (response["status_code"] == 403) {
            $.notify({
                message: 'Cannot create semester: Improper authorization level. '
            }, {
                    type: 'danger',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        } else {
            setTimeout(function () { $('#semesterCreatedSuccessModal').modal() }, 1000);
        }
    })
}

function createSemester() {
    new_semester_season = $("#new_semester_season").val()
    new_semester_year = $("#new_semester_year").val()
    url = '/semester'

    console.log(new_semester_season)
    console.log(new_semester_year)

    payload = {
        "season": new_semester_season,
        "year": new_semester_year
    }

    $.post(url, payload, function (response) {
        console.log(response)
        location.reload(true)
    })

}

function createClass() {
    new_class_class_number = $("#new_class_class_number").val()
    new_class_section_number = $("#new_class_section_number").val()
    new_class_max_capacity = $("#new_class_max_capacity").val()
    new_class_season = $("#semester").text()
    new_class_year = $("#year").text()

    url = '/class'

    payload = {
        "class_number": new_class_class_number,
        "class_section": new_class_section_number,
        "max_capacity": parseInt(new_class_max_capacity),
        "year": parseInt(new_class_year),
        "semester": new_class_season
    }

    $.post(url, payload, function (response) {
        if (response["status_code"] == 400) {
            $.notify({
                message: 'Cannot create class: Improper authorization level. '
            }, {
                    type: 'danger',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        } else if (response["status_code"] == 401) {
            $.notify({
                message: 'Class failed to be created.'
            }, {
                    type: 'danger',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        } else {
            $.notify({
                message: 'Class created!'
            }, {
                    type: 'success',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        }
    })

}

function getSpecificClass(class_number, class_section) {
    semester = $("#semester").text()
    year = $("#year").text()

    console.log(semester)
    console.log(year)
    console.log(class_number)
    console.log(class_section)

    payload = {
        "class_number": class_number,
        "class_section": class_section,
        "semester": semester,
        "year": year
    }

    url = '/get_specific_class'
    override_url = '/get_overrides_for_specific_class'

    $.get(url, payload, function (data) {
        this_class = data["specific_class"][0]
        $("#class_name").html(this_class["department"] + " " + this_class["class_number"] + "." + this_class["class_section"])
        $("#class_professor").html("Professor: " + this_class["professor"])
        $("#class_location").html("Where: " + this_class["class_location"])
        console.log(this_class["class_location"])
        $("#enrolled_students").html(this_class["num_enrolled_students"])
        $("#max_capacity").html("Max Capacity: " + this_class["max_capacity"])
        $("#potentially_enrolled").html(this_class["potentially_enrolled_students"])
    })

    my_table = $("#overrideTable").DataTable()
    my_table.destroy(remove = false)

    $.get(override_url, payload, function (data) {
        $("#override-table-body").empty()
        for (var i = 0; i < data["overrides"].length; i++) {
            if (data["overrides"][i]["registration_status"]) {
                $("#override-table-body").append('<tr><td>' + data["overrides"][i]["student_name"] + '</td>' + '<td>' + data["overrides"][i]["student_A_number"] + '</td>' + '<td>' + data["overrides"][i]["student_netid"] + '</td>' + '<td>' + data["overrides"][i]["date_created"] + '</td>' + '<td>' + data["overrides"][i]["creator"] + '</td>' + '<td id="' + data["overrides"][i]["id"] + '" style="cursor: pointer; background-color: green; " onclick="ChangeRegistrationStatus(' + '&#39' + data["overrides"][i]["id"] + '&#39' + ')">' + data["overrides"][i]["registration_status"] + '</td>' + '<td style="cursor: pointer; text-align: center; " onclick="deleteOverride(' + '&#39' + data["overrides"][i]["id"] + '&#39' + ',' + '&apos;' + class_number.toString() + '&apos;' + ',' + '&apos;' + class_section.toString() + '&apos;' + ')"><i class="fas fa-trash"></i>' + '</td>' + '</tr>')
            } else {
                $("#override-table-body").append('<tr><td>' + data["overrides"][i]["student_name"] + '</td>' + '<td>' + data["overrides"][i]["student_A_number"] + '</td>' + '<td>' + data["overrides"][i]["student_netid"] + '</td>' + '<td>' + data["overrides"][i]["date_created"] + '</td>' + '<td>' + data["overrides"][i]["creator"] + '</td>' + '<td id="' + data["overrides"][i]["id"] + '" style="cursor: pointer; background-color: red; " onclick="ChangeRegistrationStatus(' + '&#39' + data["overrides"][i]["id"] + '&#39' + ')">' + data["overrides"][i]["registration_status"] + '</td>' + '<td style="cursor: pointer; text-align: center; " onclick="deleteOverride(' + '&#39' + data["overrides"][i]["id"] + '&#39' + ',' + '&apos;' + class_number.toString() + '&apos;' + ',' + '&apos;' + class_section.toString() + '&apos;' + ')"><i class="fas fa-trash"></i>' + '</td>' + '</tr>')
            }

        }

    }).done(function () {
        $('#overrideTable').DataTable();
    })
}

function deleteOverride(override_id, class_number, class_section) {
    url = '/delete_override'

    payload = {
        "override_id": override_id
    }

    $.get(url, payload, function (response) {
        console.log(response)
        if (response["status"]) {
            $.notify({
                message: 'Override successfully deleted!'
            }, {
                    type: 'success',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        } else {
            $.notify({
                message: 'Override failed to be deleted!'
            }, {
                    type: 'danger',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        }
    }).done(function () {
        getSpecificClass(class_number, class_section)
    });

}

function createOverride() {
    url = '/override'

    student_name = $("#new_override_student_name").val()
    student_netid = $("#new_override_netid").val()
    student_A_number = $("#new_override_A_number").val()
    semester = $("#semester").text()
    year = $("#year").text()
    class_number = $("#class_number_list").val()
    class_section = $("#class_section_list").val()
    days_active = $("#num_days_to_use").val()

    payload = {
        "student_name": student_name,
        "student_netid": student_netid,
        "student_A_number": student_A_number,
        "semester": semester,
        "year": year,
        "class_number": class_number,
        "class_section": class_section,
        "days_active": days_active
    }

    $.post(url, payload, function (response) {
        if (response["status"]) {
            $.notify({
                message: 'Override successfully created!'
            }, {
                    type: 'success',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        } else {
            $.notify({
                message: 'Override failed to be created'
            }, {
                    type: 'danger',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        }
    })

}

function ChangeRegistrationStatus(override_id) {
    console.log(override_id)
    url = '/change_registration_status'

    payload = {
        "override_id": override_id
    }

    $.post(url, payload, function (response) {
        console.log(response)

        $("#" + override_id).html(response["status"])

        my_table = $("#overrideTable").DataTable()
        my_table.destroy(remove = false)

        if (response["status"]) {
            console.log("IT was true")
            console.log(typeof override_id)
            document.getElementById(override_id).style.backgroundColor = "green";
            document.getElementById(override_id).innerHTML = "true";

        } else {
            console.log("IT was false")
            console.log(typeof override_id)
            document.getElementById(override_id).style.backgroundColor = "red";
            document.getElementById(override_id).innerHTML = "false";
        }
    }).done(function () {
        $('#overrideTable').DataTable();
    })
}

function generateOverrideReport() {
    semester = $("#semester").text()
    year = $("#year").text()

    url = '/generate_override_report'

    payload = {
        "semester": semester,
        "year": year
    }

    $("#generated_override-table-body").empty()

    $.get(url, payload, function (response) {
        console.log(response)
        for (var i = 0; i < response["overrides"].length; i++) {

            $("#generated_override-table-body").append('<tr><td>' + response["overrides"][i]["student_name"] + '</td>' + '<td>' + response["overrides"][i]["student_A_number"] + '</td>' + '<td>' + response["overrides"][i]["student_netid"] + '</td>' + '<td>' + response["overrides"][i]["date_created"] + '</td>' + '<td>' + response["overrides"][i]["creator"] + '</td></tr>')

        }
    }).done(function () {
        $('#generated_overrideTable').DataTable();
    })
}

$('#generated_individual_class_modal').on('hidden.bs.modal', function () {

    $("#generated_individual_classTable_wrapper").remove()
    $("#generated_individual_class_modal_body").append('<table id="generated_individual_classTable" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%"><thead><tr><th class="th-sm">Section</th><th class="th-sm">Days</th><th class="th-sm">Time</th><th class="th-sm">Num Enrollment</th><th class="th-sm">Max Capacity</th><th class="th-sm">Percentage Filled</th></tr></thead><tbody id="generated_individual_class-table-body"></tbody><tfoot><tr><th>Section</th><th>Days</th><th>Time</th><th>Num Enrollment</th><th>Max Capacity</th><th>Percentage Filled</th></tr></tfoot></table>')

})

function displaySpecificClass(class_number) {
    semester = $("#semester").text()
    year = parseInt($("#year").text())

    url = '/display_specific_class'

    payload = {
        "semester": semester,
        "year": year,
        "class_number": class_number
    }

    $.get(url, payload, function (response) {
        console.log(response)
        for (var i = 0; i < response["classes"].length; i++) {

            $("#generated_individual_class-table-body").append('<tr><td>' + response["classes"][i]["class_section"] + '</td>' + '<td>' + response["classes"][i]["days"] + '</td>' + '<td>' + response["classes"][i]["class_time"] + '</td>' + '<td>' + response["classes"][i]["potentially_enrolled_students"] + '</td>' + '<td data-toggle="modal" data-target="#max_capacityModal" id="' + response["classes"][i]["id"] + '" style="cursor: pointer; " onclick="setupAlterMaxCapacity(' + '&#39' + response["classes"][i]["id"] + '&#39' + ')">' + response["classes"][i]["max_capacity"] + '</td>' + '<td>' + (response["classes"][i]["percentage_filled"] * 100).toFixed(2) + '%</td>' + '</tr>')

        }
    }).done(function () {
        $('#generated_individual_classTable').DataTable();
    })
}

function setupAlterMaxCapacity(id) {

    // Clear the button first
    $("#button-house").empty()

    $("#button-house").append('<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button><button onclick="alterMaxCapacity(' + '&#39' + id + '&#39' + ')" data-dismiss="modal" type="button" class="btn btn-primary">Change Max Capacity</button>')
}

function alterMaxCapacity(id) {
    new_max_capacity = $("#new_max_capacity").val()
    url = '/alter_max_capacity'

    payload = {
        "class_id": id,
        "max_capacity": new_max_capacity
    }

    $.get(url, payload, function (response) {
        if (response["status_code"] == 400) {
            $.notify({
                message: 'Cannot change max capacity: Improper authorization level. '
            }, {
                    type: 'danger',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        } else {
            $.notify({
                message: 'Max capacity changed!'
            }, {
                    type: 'success',
                    placement: {
                        from: "bottom",
                        align: "center"
                    }
                });
        }
    })
}

(function () {
    'use strict';
    window.addEventListener('load', function () {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('new_semester_form');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function (form) {
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                } else {
                    $("#creatingSemesterModal").modal()
                    $("#catsweb_semesterModal").modal('hide')

                    event.preventDefault()
                    var $form = $("#new_semester_form")
                    var url = $form.attr('action')

                    var payload = {
                        "sid": $("#netID").val(),
                        "PIN": $("#PID").val(),
                        "semester": $("#catsweb_new_semester_season").val(),
                        "year": $("#catsweb_new_semester_year").val()
                    }

                    $.post(url, payload, function (response) {
                        $("#creatingSemesterModal").modal('hide')
                        if (response["status_code"] == 400) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'success',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        } else if (response["status_code"] == 401) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'danger',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        } else {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'danger',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        }
                    });
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();

(function () {
    'use strict';
    window.addEventListener('load', function () {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('new_override_form');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function (form) {
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                } else {
                    $("#overrideModal").modal('hide')
                    event.preventDefault()
                    var $form = $("#new_override_form")
                    var url = $form.attr('action')

                    var payload = {
                        "student_name": $("#new_override_student_name").val(),
                        "student_netid": $("#new_override_netid").val(),
                        "student_A_number": $("#new_override_A_number").val(),
                        "semester": $("#semester").text(),
                        "year": $("#year").text(),
                        "class_number": $("#class_number_list").val(),
                        "class_section": $("#class_section_list").val(),
                        "days_active": $("#num_days_to_use").val()
                    }

                    console.log(payload)
                    console.log(url)

                    $.post(url, payload, function (response) {

                        if (response["status_code"] == 400) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'success',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        } else if (response["status_code"] == 401) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'danger',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        } else if (response["status_code"] == 402) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'danger',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        }
                    });
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();

(function () {
    'use strict';
    window.addEventListener('load', function () {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('change_password_form');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function (form) {
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                } else {
                    $("#change_password_modal").modal('hide')
                    event.preventDefault()
                    var $form = $("#change_password_form")
                    var url = $form.attr('action')

                    var payload = {
                        "old_password": $("#old_password").val(),
                        "new_password": $("#new_password").val(),
                        "confirm_password": $("#confirm_password").val()
                    }

                    $.post(url, payload, function (response) {

                        if (response["status_code"] == 400) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'success',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        } else if (response["status_code"] == 401) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'danger',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        } else if (response["status_code"] == 402) {
                            $.notify({
                                message: response["message"]
                            }, {
                                    type: 'danger',
                                    placement: {
                                        from: "bottom",
                                        align: "center"
                                    }
                                });
                        }
                    });
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();